{"version":3,"sources":["Good.jsx","App.jsx","index.jsx"],"names":["Good","good","goodsFromServer","SORT_TYPE_ALPHABET","SORT_TYPE_LENGTH","App","useState","sortType","setSortType","isReversed","setIsReversed","goods","finalGoods","sort","good1","good2","localeCompare","length","reverse","getFinalGoods","isModified","className","type","cn","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,oBAAI,UAAQ,OAAZ,SAAoBA,KCKTC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAqB,WACrBC,EAAmB,SA2BlB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAAuBA,EAAvB,GAAyD,IAAzBJ,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,WACpCG,EAAU,YAAOD,GAqBrB,OAnBIJ,GACFK,EAAWC,MAAK,SAACC,EAAOC,GACtB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,IACFG,EAAaA,EAAWM,WAGnBN,EAMOO,CAAcjB,EAAiB,CAAEK,WAAUE,eACnDW,EAAaX,GAAcF,EAOjC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAaJ,IAE3BqB,QAAS,kBAAMhB,EAAYL,IAL7B,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAaH,IAE3BoB,QAAS,kBAAMhB,EAAYJ,IAL7B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAad,IAEfe,QAAS,kBAAMd,GAAeD,IALhC,qBAUCW,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA1CV,WACEhB,EAAY,IACZE,GAAc,IAqCR,sBAUJ,6BACGC,EAAMc,KAAI,SAAAxB,GAAI,OACb,cAAC,EAAD,CAAMA,KAAMA,GAAWA,YCrGjCyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2666bff2.chunk.js","sourcesContent":["export const Good = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Good } from './Good';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TYPE_ALPHABET = 'alphabet';\nconst SORT_TYPE_LENGTH = 'length';\n\nfunction getFinalGoods(goods, { sortType, isReversed }) {\n  let finalGoods = [...goods];\n\n  if (sortType) {\n    finalGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_TYPE_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_TYPE_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    finalGoods = finalGoods.reverse();\n  }\n\n  return finalGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = getFinalGoods(goodsFromServer, { sortType, isReversed });\n  const isModified = isReversed || sortType;\n\n  function reset() {\n    setSortType('');\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType !== SORT_TYPE_ALPHABET,\n          })}\n          onClick={() => setSortType(SORT_TYPE_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType !== SORT_TYPE_LENGTH,\n          })}\n          onClick={() => setSortType(SORT_TYPE_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isModified && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <Good good={good} key={good} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}